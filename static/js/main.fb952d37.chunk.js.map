{"version":3,"sources":["images/copy.svg","images/fallback.gif","ErrorBoundary/ErrorBoundary.js","components/TextArea/HowToUse/HowToUseData/HowToUseData.js","components/TextArea/HowToUse/HowToUse.js","components/TextArea/TextArea.js","components/FontClassification/FontCategory/FontCategory.js","components/FontClassification/FontClassification.js","components/FontProperty/FontFamily/FontFamily.js","components/FontProperty/FontVariant/FontVariant.js","components/FontProperty/FontProperty.js","components/FontSize/FontSize.js","components/FontColor/FontColor.js","components/FontSelection/FontSelection.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ErrorBoundary","state","hasError","error","info","console","log","this","react_default","a","createElement","className","style","paddingTop","src","fallbackImage","alt","color","props","children","React","Component","HowToUseData","googleLink","fontFamily","replace","font","link","loadStandardTabActive","copyIcon","onClick","navigator","clipboard","writeText","href","target","rel","HowToUse","clickTab","id","document","getElementById","background","_this","setState","_this2","class","HowToUse_HowToUseData_HowToUseData","TextArea","fontVariant","fontWeight","length","WebFont","load","google","families","toString","placeholder","height","boxShadow","fontSize","fontColor","fontStyle","howToUseToggle","isHowToUseActive","TextArea_HowToUse_HowToUse","FontCategory","data-value","text","selectCategory","FontClassification","FontClassification_FontCategory_FontCategory","category","FontFamily","option","data","map","item","index","value","family","key","filter","toLowerCase","defaultValue","onChange","event","changeFontFamily","disabled","label","FontVariant","isCategoryDisable","variants","changeFontVariant","FontProperty","FontProperty_FontFamily_FontFamily","FontProperty_FontVariant_FontVariant","FontSize","marginLeft","type","width","changeFontSize","FontColor","changeColor","FontSelection","components_FontClassification_FontClassification","components_FontProperty_FontProperty","components_FontSize_FontSize","components_FontColor_FontColor","Layout","Object","objectSpread","fetch","then","response","json","items","catch","_this3","components_TextArea_TextArea","components_FontSelection_FontSelection","getDerivedStateFromProps","nextProps","nextState","App","src_ErrorBoundary_ErrorBoundary","containers_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb952d37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/copy.afa26d36.svg\";","module.exports = __webpack_public_path__ + \"static/media/fallback.b137c71a.gif\";","import React from 'react';\nimport fallbackImage from '../images/fallback.gif';\n\nclass ErrorBoundary extends React.Component {\n\n\tstate = {\n\t\thasError: false\n\t};\n\n\tstatic getDerivedStateFromError(error) {\n\t\treturn { hasError: true };\n\t};\n\n\tcomponentDidCatch(error, info) {\n\t\tconsole.log('----error----', error, '---info----', info);\n\t};\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn (\n\t\t\t\t<div className=\"fallback text-center\">\n\t\t\t\t\t<div className=\"fallback-message w-100 text-center\" style={{ paddingTop: '180px' }}>\n\t\t\t\t\t\t<img src={fallbackImage} alt=\"Not available\" />\n\t\t\t\t\t\t<h2 className=\"mt-5\" style={{ color: '#A9A9A9' }}>Hmm...Looks like something went wrong</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn this.props.children;\n\t}\n};\nexport default ErrorBoundary;\n","import React from 'react';\nimport copyIcon from '../../../../images/copy.svg';\n\nconst HowToUseData = (props) => {\n    const head = '<head>';\n    const googleLink = 'https://fonts.google.com/specimen/' + props.fontFamily.replace(/ /g, \"+\");\n    const font = 'font-family: ' + props.fontFamily + ' , sans-serif;';\n\n    let link = null;\n    if (props.loadStandardTabActive) {\n        link = '<link href=\"https://fonts.googleapis.com/css?family=' + props.fontFamily.replace(/ /g, \"+\") + '\" rel=\"stylesheet\">';\n    } else {\n        link = \"<style> @import url('https://fonts.googleapis.com/css?family=\" + props.fontFamily.replace(/ /g, \"+\") + \"'); </style>\"\n    }\n\n    return (\n        <div className=\"how-to-use-data mt-2\">\n            <div className=\"embed-font\">\n                <h3>Embed Font</h3>\n                <p>To embed your selected fonts into a webpage, copy this code into the {head} of your HTML document.</p>\n                <div className=\"link p-2 border\">\n                    <p className=\"pt-2\">\n                        {link}\n                        <span className=\"copyIcon float-right\">\n                            <img src={copyIcon} alt=\"Not found\" onClick={() => navigator.clipboard.writeText(link)} />\n                        </span>\n                    </p>\n                </div>\n            </div>\n            <div className=\"specify-css mt-2\">\n                <h3>Specify in CSS</h3>\n                <p>Use the following CSS rules to specify these families:</p>\n                <div className=\"font p-2 border\">\n                    <p className=\"pt-2\">\n                        {font}\n                        <span className=\"copyIcon float-right\">\n                            <img src={copyIcon} alt=\"Not found\" onClick={() => navigator.clipboard.writeText(font)} />\n                        </span>\n                    </p>\n                </div>\n            </div>\n            <div className=\"google-link mt-2\">\n                Goolgle Fonts:&nbsp;\n                <a href={googleLink} target=\"_blank\" rel=\"noopener noreferrer\">{googleLink}</a>\n            </div>\n        </div>\n    );\n};\n\nexport default HowToUseData;","import React, { Component } from 'react';\nimport HowToUseData from './HowToUseData/HowToUseData';\n\nimport './HowToUse.css';\n\nclass HowToUse extends Component {\n\n    state = {\n        loadStandardTabActive: true\n    }\n\n    clickTab = (id) => {\n        if (id === 'standard') {\n            document.getElementById('standard').style.background = \"#ccc\";\n            document.getElementById('import').style.background = \"#fff\";\n            this.setState({\n                loadStandardTabActive: true\n            });\n        } else {\n            document.getElementById('standard').style.background = \"#fff\";\n            document.getElementById('import').style.background = \"#ccc\";\n            this.setState({\n                loadStandardTabActive: false\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"how-to-use w-100 ml-5 pl-3 mt-3\">\n                <ul class=\"list-inline row\">\n                    <li class=\"list-group-item col-md-6\" id=\"standard\" onClick={() => this.clickTab('standard')}>STANDARD</li>\n                    <li class=\"list-group-item col-md-6\" id=\"import\" onClick={() => this.clickTab('import')}>@IMPORT</li>\n                </ul>\n                <HowToUseData fontFamily={this.props.fontFamily} loadStandardTabActive={this.state.loadStandardTabActive} />\n            </div>\n        );\n    }\n\n};\n\nexport default HowToUse;","import React from 'react';\nimport WebFont from 'webfontloader';\nimport HowToUse from './HowToUse/HowToUse';\n\nconst TextArea = (props) => {\n    let fontVariant = props.fontVariant;\n    let fontWeight = 400;\n    if (props.fontFamily.length > 0) {\n        WebFont.load({\n            google: {\n                families: [props.fontFamily.toString()]\n            }\n        });\n    }\n    if (props.fontVariant === 'regular') {\n        fontVariant = 'normal';\n    }\n    if (props.fontVariant !== 'regular' && props.fontVariant !== 'italic') {\n        fontWeight = fontVariant;\n    }\n\n    return (\n        <div className=\"textarea col-md-8\">\n            <form className=\"w-100 ml-5\">\n                <textarea\n                    className=\"form-control\"\n                    placeholder=\"Write Something......\"\n                    style={{ height: '300px', boxShadow: 'none', fontSize: props.fontSize, color: props.fontColor, fontFamily: props.fontFamily + ', sans-serif', fontStyle: fontVariant, fontWeight: fontWeight }}\n                />\n            </form>\n            <div className=\"btn btn-sm btn-primary ml-5 mt-2\" onClick={props.howToUseToggle}>&lt;/&gt;How to use</div>\n            {\n                props.isHowToUseActive && <HowToUse fontFamily={props.fontFamily} />\n            }\n        </div>\n    );\n};\n\nexport default TextArea;","import React from 'react';\nimport './FontCategory.css';\n\nconst setColor = (text) => {\n    document.getElementById(text).style.background = \"#ccc\";\n};\nconst FontCategory = (props) => {\n    return (\n        <div\n            className=\"font-category radio col-md-5 m-2 pt-2 text-center border\"\n            data-value={props.text}\n            id={props.text}\n            onClick={() => {\n                props.selectCategory(props.text);\n                setColor(props.text);\n            }}>\n            <p> {props.text}</p>\n        </div>\n    );\n};\n\nexport default FontCategory;","import React from 'react';\nimport FontCategory from './FontCategory/FontCategory';\n\nconst FontClassification = (props) => {\n    return (\n        <div className=\"font-classification\">\n            <p> CLASSIFICATION</p>\n            <div className=\"classification ml-1\">\n                <div className=\"row category\">\n                    <FontCategory text=\"All\" selectCategory={(category) => props.selectCategory(category)} />\n                    <FontCategory text=\"Sans-Serif\" selectCategory={(category) => props.selectCategory(category)} />\n                </div>\n                <div className=\"row category\">\n                    <FontCategory text=\"Serif\" selectCategory={(category) => props.selectCategory(category)} />\n                    <FontCategory text=\"Display\" selectCategory={(category) => props.selectCategory(category)} />\n                </div>\n                <div className=\"row category\">\n                    <FontCategory text=\"Handwriting\" selectCategory={(category) => props.selectCategory(category)} />\n                    <FontCategory text=\"Monospace\" selectCategory={(category) => props.selectCategory(category)} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FontClassification;","import React from 'react';\n\nconst FontFamily = (props) => {\n    let property = null;\n    let option = null;\n    if (props.category === 'All') {\n        option = props.data.map((item, index) => {\n            return <option value={item.family} key={index}>{item.family}</option>\n        });\n    } else {\n\n        property = props.data.filter(item => item.category.toLowerCase() === props.category.toLowerCase());\n        option = property.map((item, index) => {\n            return <option value={item.family} key={index}>{item.family}</option>\n        });\n    }\n    return (\n        <div className=\"font-property mt-2\">\n            <div className=\"selectProperty\">\n                <select\n                    className=\"form-control\"\n                    id=\"selectProperty\"\n                    defaultValue=\"\"\n                    onChange={(event) => props.changeFontFamily(event)}>\n                    <option value=\"\" disabled>{props.label}</option>\n                    {option}\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default FontFamily;\n","import React from 'react';\n\nconst FontVariant = (props) => {\n\tlet property = null;\n\tlet option = null;\n\n\tif (!props.isCategoryDisable) {\n\t\tproperty = props.data.filter(item => item.family.toLowerCase() === props.fontFamily.toLowerCase());\n\t\tproperty.map(item => {\n\t\t\toption = item.variants.map(data => {\n\t\t\t\treturn <option value={data} key={data}>{data}</option>\n\t\t\t})\n\t\t\treturn 1;\n\t\t});\n\t}\n\treturn (\n\t\t<div className=\"font-property mt-2\">\n\t\t\t<div className=\"selectProperty\">\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"selectProperty\"\n\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\tonChange={(event) => props.changeFontVariant(event)}\n\t\t\t\t\tdisabled={props.isCategoryDisable}>\n\t\t\t\t\t<option value=\"\" disabled>{props.label}</option>\n\t\t\t\t\t{option}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FontVariant;\n","import React from 'react';\nimport FontFamily from './FontFamily/FontFamily';\nimport FontVariant from './FontVariant/FontVariant';\n\nconst FontProperty = (props) => {\n    return (\n        <div className=\"font-property\">\n            <p className=\"mt-1\">PROPERTY</p>\n            <FontFamily\n                label=\"Select Font Family\"\n                data={props.data}\n                category={props.category}\n                changeFontFamily={(event) => props.changeFontFamily(event)}\n            />\n            <FontVariant\n                label=\"Select Font Variant\"\n                isCategoryDisable={props.isCategoryDisable}\n                data={props.data}\n                category={props.category}\n                fontFamily={props.fontFamily}\n                changeFontVariant={(event) => props.changeFontVariant(event)} />\n        </div>\n    );\n};\n\nexport default FontProperty;","import React from 'react';\n\nconst FontSize = (props) => {\n    return (\n        <div className=\"font-size row ml-1 mt-3\">\n            <div> FONT SIZE</div>\n            <div className=\"font-input\" style={{ marginLeft: '124px' }}>\n                <input\n                    type=\"number\"\n                    defaultValue=\"20\"\n                    className=\"form-control\"\n                    style={{ width: '59px' }}\n                    onChange={(event) => props.changeFontSize(event)} />\n            </div>\n        </div>\n    );\n};\n\nexport default FontSize;","import React from 'react';\n\nconst FontColor = (props) => {\n    return (\n        <div className=\"font-color row ml-1 mt-3\">\n            <div>TEXT COLOR</div>\n            <div className=\"font-input\" style={{ marginLeft: '106px' }}>\n                <input\n                    type=\"color\"\n                    className=\"form-control\"\n                    style={{ width: '59px' }}\n                    onChange={(event) => props.changeColor(event)} />\n            </div>\n        </div>\n    );\n};\n\nexport default FontColor;","import React from 'react';\nimport FontClassification from '../FontClassification/FontClassification';\nimport FontProperty from '../FontProperty/FontProperty';\nimport FontSize from '../FontSize/FontSize';\nimport FontColor from '../FontColor/FontColor';\n\nconst FontSelection = (props) => {\n    return (\n        <div className=\"font-selection col-md-3 offset-1 border\">\n            <FontClassification selectCategory={(category) => props.selectCategory(category)} />\n            <FontProperty\n                isCategoryDisable={props.isCategoryDisable}\n                data={props.data}\n                category={props.category}\n                fontFamily={props.fontFamily}\n                changeFontFamily={(event) => props.changeFontFamily(event)}\n                changeFontVariant={(event) => props.changeFontVariant(event)} />\n            <FontSize changeFontSize={(event) => props.changeFontSize(event)} />\n            <FontColor changeColor={(event) => props.changeColor(event)} />\n        </div>\n    );\n};\n\nexport default FontSelection;","import React, { Component } from 'react';\nimport TextArea from '../../components/TextArea/TextArea';\nimport FontSelection from '../../components/FontSelection/FontSelection';\n\nconst url = 'https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyAu5dCU2-4pNltm6Fh2WhQO7ReMBocstbc';\n\nclass Layout extends Component {\n\n\tstate = {\n\t\tdata: [],\n\t\tisCategoryDisable: true,\n\t\tcategory: 'All',\n\t\tfontSize: '20px',\n\t\tfontColor: '#000',\n\t\tfontFamily: '',\n\t\tfontVariant: '',\n\t\tisHowToUseActive: false\n\t};\n\n\tstatic getDerivedStateFromProps = (nextProps, nextState) => {\n\t\tif (nextState.fontFamily.length === 0) {\n\t\t\treturn { isCategoryDisable: true }\n\t\t} else {\n\t\t\treturn { isCategoryDisable: false }\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({ data: data.items }))\n\t\t\t.catch((error) => {\n\t\t\t\treturn error;\n\t\t\t})\n\t};\n\n\tselectCategory = (category) => {\n\t\tthis.setState({\n\t\t\tcategory\n\t\t});\n\t};\n\n\tchangeFontSize = (event) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfontSize: event.target.value + 'px'\n\t\t});\n\t};\n\n\tchangeColor = (event) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfontColor: event.target.value\n\t\t});\n\t};\n\n\tchangeFontFamily = (event) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfontFamily: event.target.value\n\t\t});\n\t};\n\n\tchangeFontVariant = (event) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfontVariant: event.target.value\n\t\t});\n\t};\n\n\thowToUseToggle = () => {\n\t\tthis.setState({ isHowToUseActive: !this.state.isHowToUseActive })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"layout col-md-10 offset-1 mt-4\">\n\t\t\t\t<div className=\"layout-wrapper row\">\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\tfontFamily={this.state.fontFamily}\n\t\t\t\t\t\tfontSize={this.state.fontSize}\n\t\t\t\t\t\tfontColor={this.state.fontColor}\n\t\t\t\t\t\tfontVariant={this.state.fontVariant}\n\t\t\t\t\t\thowToUseToggle={this.howToUseToggle}\n\t\t\t\t\t\tisHowToUseActive={this.state.isHowToUseActive} />\n\t\t\t\t\t<FontSelection\n\t\t\t\t\t\tselectCategory={(category) => this.selectCategory(category)}\n\t\t\t\t\t\tisCategoryDisable={this.state.isCategoryDisable}\n\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\tcategory={this.state.category}\n\t\t\t\t\t\tfontFamily={this.state.fontFamily}\n\t\t\t\t\t\tchangeFontSize={(event) => this.changeFontSize(event)}\n\t\t\t\t\t\tchangeColor={(event) => this.changeColor(event)}\n\t\t\t\t\t\tchangeFontFamily={(event) => this.changeFontFamily(event)}\n\t\t\t\t\t\tchangeFontVariant={(event) => this.changeFontVariant(event)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default Layout;","import React, { Component } from 'react';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nimport Layout from './containers/Layout/Layout';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<Layout />\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}